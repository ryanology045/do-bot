# .github/workflows/ci-cd.yml

name: CI/CD to AWS ECS

on:
  push:
    branches: [ "deploy" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URI }}

      - name: Build Docker image
        run: |
          docker build -t slackbot-app:latest .

      - name: Tag Docker image
        run: |
          docker tag slackbot-app:latest ${{ secrets.ECR_REPO_URI }}:latest

      - name: Push to ECR
        run: |
          docker push ${{ secrets.ECR_REPO_URI }}:latest

      - name: Inject environment variables into ECS Task Definition
        run: |
          sed -i "s|<IMAGE_URI>|${{ secrets.ECR_REPO_URI }}:latest|g" deployment/ecs_task_definition.json

          sed -i "s|<ADMIN_USER_IDS>|${{ secrets.ADMIN_USER_IDS }}|g" deployment/ecs_task_definition.json
          sed -i "s|<AWS_ACCESS_KEY_ID>|${{ secrets.AWS_ACCESS_KEY_ID }}|g" deployment/ecs_task_definition.json
          sed -i "s|<AWS_DEFAULT_REGION>|${{ secrets.AWS_DEFAULT_REGION }}|g" deployment/ecs_task_definition.json
          sed -i "s|<AWS_SECRET_ACCESS_KEY>|${{ secrets.AWS_SECRET_ACCESS_KEY }}|g" deployment/ecs_task_definition.json
          sed -i "s|<ECR_REPO_URI>|${{ secrets.ECR_REPO_URI }}|g" deployment/ecs_task_definition.json
          sed -i "s|<ECS_CLUSTER>|${{ secrets.ECS_CLUSTER }}|g" deployment/ecs_task_definition.json
          sed -i "s|<ECS_SERVICE>|${{ secrets.ECS_SERVICE }}|g" deployment/ecs_task_definition.json
          sed -i "s|<ECS_TASK_DEFINITION>|${{ secrets.ECS_TASK_DEFINITION }}|g" deployment/ecs_task_definition.json
          sed -i "s|<GH_OWNER>|${{ secrets.GH_OWNER }}|g" deployment/ecs_task_definition.json
          sed -i "s|<GH_REPO>|${{ secrets.GH_REPO }}|g" deployment/ecs_task_definition.json
          sed -i "s|<GH_REPO_NAME>|${{ secrets.GH_REPO_NAME }}|g" deployment/ecs_task_definition.json
          sed -i "s|<GH_TOKEN>|${{ secrets.GH_TOKEN }}|g" deployment/ecs_task_definition.json
          sed -i "s|<OPENAI_API_KEY>|${{ secrets.OPENAI_API_KEY }}|g" deployment/ecs_task_definition.json
          sed -i "s|<PORT>|${{ secrets.PORT }}|g" deployment/ecs_task_definition.json
          sed -i "s|<SLACK_APP_TOKEN>|${{ secrets.SLACK_APP_TOKEN }}|g" deployment/ecs_task_definition.json
          sed -i "s|<SLACK_BOT_TOKEN>|${{ secrets.SLACK_BOT_TOKEN }}|g" deployment/ecs_task_definition.json
          sed -i "s|<SLACK_SIGNING_SECRET>|${{ secrets.SLACK_SIGNING_SECRET }}|g" deployment/ecs_task_definition.json
          sed -i "s|<UPGRADE_CHANNEL_NAME>|${{ secrets.UPGRADE_CHANNEL_NAME }}|g" deployment/ecs_task_definition.json

      - name: Register Task Definition & Update Service
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://deployment/ecs_task_definition.json

          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --force-new-deployment
